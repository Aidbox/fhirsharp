<#@ template language="C#" debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>

<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Runtime" #>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Aidbox.Generator;

namespace Aidbox.Model
{
    [DataContract]
    public partial class <#= type.EntityName #> : BaseClass
    {
        <#
	    foreach (AttributeDescription ad in type.Attributes)
        {
        #>

        [DataMember]
        [JsonPropertyAttribute("<#= ad.Path[0] #>")]
        <#= ad.IsDate() ? "[JsonConverter(typeof(CustomDateTimeConverter))]" : "" #>
        public <#= ad.GetDotNetCollectionType() #> <#= ad.Name() #>
        {
            <#if (ad.IsCollection){#>
            get { if(_<#= ad.Name() #>==null) _<#= ad.Name() #> = new <#= ad.GetDotNetCollectionType() #>(); return _<#= ad.Name() #>; }
            <#}else{#>            
            get { return _<#= ad.Name() #>; }
            <#}#>            
            set { _<#= ad.Name() #> = value; }
        }
        
        private <#= ad.GetDotNetCollectionType() #> _<#= ad.Name() #>;
        
        <# 
        }
        #>        
    }
}